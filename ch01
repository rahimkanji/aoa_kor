This chapter is a “quick-start” chapter 
that lets you start writing basic assembly 
language programs as rapidly as possible. 
This chapter does the following:
z Presents the basic syntax of an HLA (High Level Assembly) program
z Introduces you to the Intel CPU architecture
z Provides a handful of data declarations, machine instructions, and highlevel control statements 
z Describes some utility routines you can call in the HLA Standard Library
z Shows you how to write some simple assembly language programs
By the conclusion of this chapter, you should understand the basic 
syntax of an HLA program and should understand the prerequisites that are 
needed to start learning new assembly language features in the chapters that 
follow.

이번장은 최대한 빨리 기본적인 어셈블리 프로그램을 만들어보도록 하겠습니다. 이번 장이 다룰 내용은:
- HLA 프로그램의 기본적인 문법을 보여주고
- 인텔 CPU 아키텍쳐를 소개하고
- 쉽게 쓸 수 있는 데이터 선언과 어셈블리 명령어, 고급 제어문을 알려주고
- HLA 표준 라이브러리에 있는 몇가지 쓸만한 루틴을 설명하고
- 어떻게하면 기본적인 어셈블리 언어 프로그램을 작성할 수 있는지 보여줍니다.

이번 장을 읽으면 HLA 프로그램의 기본 문법을 이해하게되고,
나머지 장들에 사용되는 어셈블리 언어의 특징들을 이해하는데 필요한 기본 지식들을 얻게됩니다.

A typical HLA program takes the form shown in Figure 1-1.
pgmID in the template above is a user-defined program identifier. You 
must pick an appropriate descriptive name for your program. In particular, 
pgmID would be a horrible choice for any real program. If you are writing 
programs as part of a course assignment, your instructor will probably give 
you the name to use for your main program. If you are writing your own HLA 
program, you will have to choose an appropriate name for your project.
Identifiers in HLA are very similar to identifiers in most high-level 
languages. HLA identifiers may begin with an underscore or an alphabetic 
character and may be followed by zero or more alphanumeric or underscore 
characters. HLA’s identifiers are case neutral. This means that the identifiers 
are case sensitive insofar as you must always spell an identifier exactly the same 
way in your program (even with respect to upper- and lowercase). However, 
unlike in case-sensitive languages such as C/C++, you may not declare two 
identifiers in the program whose name differs only by alphabetic case.
A traditional first program people write, popularized by Kernighan and 
Ritchie’s The C Programming Language, is the “Hello, world!” program. This 
program makes an excellent concrete example for someone who is learning 
a new language. Listing 1-1 presents the HLA helloWorld program.

일반적인 HLA 프로그램은 그림 1-1과 같은 형태를 가집니다.
그림1-1
위의 형태에서 pgmID는 사용자가 정의한 식별자입니다. 당신의 프로그램을 잘 설명할 수 있는 이름을 식별자로 정해야합니다.
이름을 잘못지으면 프로그램을 끔찍하게 만들 수 있습니다. 수업 과제로 프로그램을 만들 때는
메인 프로그램의 이름을 교수님이 정해줄 것입니다. 혼자서 HLA 프로그램을 만들 때는 스스로 프로젝트의
성격에 맞는 이름을 지어야합니다. 이런 식별자들은 다른 대부분의 고급 언어들과 마찬가지로 시작글자는 밑줄이나 알파벳으로
해야하고 나머지 글자는 숫자나 알파벳, 밑줄을 사용할 수 있습니다. HLA의 식벼자는 대소문자를 구분하지 않습니다.
식별자
